JavaScript library for quick simple canvas manipulation


Properties:
  .width (Number)
    Width of canvas

  .height (Number)
    Height of canvas

  .color (String)
    Current fillStyle of context

  .highDPI (Boolean)
    is resizing canvas for high pixel ratio devices?

  .dpi (undefined or Number)
    window.devicePixelRatio

  .element (DOMElement)
    <canvas> element bound to object

  .context (2DRenderingContext)
    .element.getContext("2d")

  .RANDOM (Number (Int))
    Number from 0 -> 0xFFFFFF

  .maximized (Boolean)
    is maximized? Covering entire window?
    ! May disturb CSS and styling

  .preventDefault (Boolean) 
    prevent default events when focused on canvas
    or window, when maximized
    
Methods
  .appendTo( DOMElement element )
    appends itself to element

  .set( Number x, Number y, Number or String color )
    sets pixel (x, y) to color 

  .set( Number x, Number or String color )
    sets pixel (x) to color

  .rect( Number x, Number y, Number width, Number height )
    fills rectangle at (x, y) width * height

  .clear()
    clears canvas

  .forEach( Function callback(Number pixel, Number widthTimesHeight) ) 
    cycles through all pixels

  .forEachXY(
      Function callback(Number x, Number y, Number width, Number height)
    )
    cycles through all pixels

  .forEachX( Function callback(Number x, Number width) )
    cycles through all X pixels 

  .forEachY( Function callback(Number y, Number height) )
    cycles through all Y pixels

  .toImage()
    returns DOMElementIMG with current canvas state

Constructor
  new JsCvs(Object options)
    options
       int width: width of canvas
       int height: height of canvas
       bool maximize: is covering entire window, overrides width/height
       bool noRedrawOnResize: prevent redrawing on resize while maximized